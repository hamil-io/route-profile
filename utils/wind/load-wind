#!/bin/bash

# Test for getopt
getopt --test > /dev/null
if [ $? -ne 4 ]; then
    echo "Iâ€™m sorry, `getopt --test` failed in this environment."
    exit 1
fi

show_help () {
    usage="load-wind -- Program to load NOAA High-Resolution Rapid Refresh raster data. By default it will load the raster for the current day and hour. This will only load the forecast for the following hour.

Usage: load-wind [OPTION...]

Where:

    -h, --help                         Show this help text
    -d, --database=DATABASE            Name of the database you want to import into
    -t, --table=TABLE                  Name of the table you want to import to
    -s, --size=SIZE                    Tile size to pass to raster2pgsql, defaults to 10x10
    --day=DAY                          The day of the current month you would like to load data for
    --hour=HOUR                        The hour you would like to load data for in UTC"

    echo "$usage"
}

db="route-profile"
table="wind"
size="10x10"

year=`date -u +%Y`
month=`date -u +%m`
day=`date -u +%d`
hour=`date -u +%H`

SHORT="d:t:s:h"
LONG="help,database:,table:,size:,day:,hour:"

PARSED=$(getopt --options $SHORT --longoptions $LONG --name "$0" -- "$@")
if [ $? -ne 0 ]; then
    exit 2
fi

eval set -- "$PARSED"

while true; do
    case "$1" in
        -h|--help)
            show_help
            exit
            ;;
        -d|--database)
            db=$2
            shift 2
            ;;
        -t|--table)
            table=$2
            shift 2
            ;;
        -s|--size)
            size=$2
            shift 2
            ;;
        --day)
            day=$(printf "%02d" $2)
            shift 2
            ;;
        --hour)
            hour=$(printf "%02d" $2)
            shift 2
            ;;
        --)
            shift
            break
            ;;
        *)
            echo "Unrecognized Option: $1"
            exit 3
            ;;
    esac
done

mkdir -p /tmp/route-profile/wind
cd /tmp/route-profile/wind
rm hrrr.t* 2> /dev/null

URL="http://www.ftp.ncep.noaa.gov/data/nccf/com/hrrr/prod"
FILE="hrrr.${year}${month}${day}/hrrr.t${hour}z.wrfsubhf01.grib2"

echo "Downloading raster..."
wget --quiet "$URL/$FILE"

while [ $? -ne 0 ]
do
    echo "Raster not available yet, retrying download in 10 seconds..."
    sleep 10
    wget --quiet "$URL/$FILE"
done

echo "Download sucessful!"
echo "Exporting raster bands..."

/usr/local/bin/raster2pgsql -d -I -M -Y -b 15,16,56,57,97,98,138,139 -s 98411 -t $size hrrr.t* $table > wind.sql 2>&1

echo "Importing into Postgres..."

psql $db < wind.sql

echo "Finished!"
